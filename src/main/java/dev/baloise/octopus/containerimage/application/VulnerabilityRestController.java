package dev.baloise.octopus.containerimage.application;

import dev.baloise.octopus.containerimage.domain.ContainerImage;
import dev.baloise.octopus.containerimage.domain.ContainerImageService;
import dev.baloise.octopus.containerimage.domain.Severity;
import lombok.RequiredArgsConstructor;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import java.util.Arrays;
import java.util.HashSet;
import java.util.Set;
import java.util.stream.Collectors;

@RestController
@RequiredArgsConstructor
@RequestMapping(path = "api/vulnerabilities")
public class VulnerabilityRestController {

    private final ContainerImageService containerImageService;

    @GetMapping
    public Set<ImageVulnerabilityDto> getImageVulnerabilities() {
        Iterable<ContainerImage> containerImges = containerImageService.getAllContainerImges();
        Set<ContainerImage> allContainerImages = new HashSet<>();
        containerImges.forEach(allContainerImages::add);
        return allContainerImages
                .stream()
                .map(this::mapToDto)
                .map(this::enrichWithSomeVulnerabilities)
                .collect(Collectors.toSet());
    }

    private ImageDto mapToDto(ContainerImage containerImage) {
        return new ImageDto(containerImage.getOrganisation(), containerImage.getRepository(), containerImage.getRegistryUrl(), containerImage.getTag(), containerImage.getDigest());
    }

    // TODO: Get from DB as well
    private ImageVulnerabilityDto enrichWithSomeVulnerabilities(ImageDto imageDto) {
        return new ImageVulnerabilityDto(
                imageDto,
                new VulnerabilityInfoDto(Severity.HIGH, Arrays.asList(
                        new VulnerabilityDto("https://www.linktomoredetails.com/thisexactone"),
                        new VulnerabilityDto("https://www.linktomoredetails.com/otherone")
                ), Arrays.asList(
                        new SeveritySummaryDto(Severity.HIGH, 3, 3),
                        new SeveritySummaryDto(Severity.MEDIUM, 22, 18)
                ))
        );
    }

}
